@model ProductVM

<div class="container">
    <div class="page-header">
        <h1 class="form-title">@(Model.Product.Id == 0 ? "Create " : "Update ")Product</h1>
    </div>

    <div class="form-container">
        <form method="post" enctype="multipart/form-data">
            <input asp-for="Product.Id" hidden />
            <input asp-for="Product.ImgUrl" hidden />

            <div class="row">
               <div class="col-10">
                    <div class="input-group-custom">
                        <label asp-for="Product.Title"></label>
                        <input asp-for="Product.Title" class="form-control" placeholder="Enter category Title">
                        <span asp-validation-for="Product.Title" class="validation-error"></span>
                    </div>

                    <div class="input-group-custom">
                        <label asp-for="Product.Author"></label>
                        <input asp-for="Product.Author" class="form-control" placeholder="Enter display Author">
                        <span asp-validation-for="Product.Author" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.Description"></label>
                        <textarea asp-for="Product.Description" class="form-control" ></textarea>

                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.ISBN"></label>
                        <input asp-for="Product.ISBN" class="form-control" placeholder="Enter display ISBN">
                        <span asp-validation-for="Product.ISBN" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.ListPrice"></label>
                        <input asp-for="Product.ListPrice" class="form-control" placeholder="Enter display ListPrice">
                        <span asp-validation-for="Product.ListPrice" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.Price"></label>
                        <input asp-for="Product.Price" class="form-control" placeholder="Enter display Price">
                        <span asp-validation-for="Product.Price" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.Price50"></label>
                        <input asp-for="Product.Price50" class="form-control" placeholder="Enter display Price50">
                        <span asp-validation-for="Product.Price50" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.Price100"></label>
                        <input asp-for="Product.Price100" class="form-control" placeholder="Enter display Price100">
                        <span asp-validation-for="Product.Price100" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.CategoryId"></label>
                        <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList"><option disabled selected>--Select Category </option></select>
                        <span asp-validation-for="Product.CategoryId" class="validation-error"></span>
                    </div>
                    <div class="input-group-custom">
                        <label asp-for="Product.ImgUrl"> </label>
                        <input type="file" name="file" class="form-control border-0 shadow">
                    </div>

                    <div class="row g-3">
                        <div class="col-md-6">
                            @if (Model.Product.Id == 0)

                            {
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="bi bi-check-circle me-2"></i>Create
                                </button>
                            }

                            else

                            {
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="bi bi-check-circle me-2"></i> Update
                                </button>
                            }
                        </div>
                        <div class="col-md-6">
                            <a asp-action="Index" class="btn btn-outline-secondary w-100">
                                <i class="bi bi-arrow-left me-2"></i>Back to List
                            </a>
                        </div>
                    </div>
                </div>
               <div class="col-2">
                    <img src="@Model.Product.ImgUrl" width="100%"
                         style="border-radius:5px; border:1px solid #bbb9b9"/>
                </div>

            </div>
           
        </form>
    </div>
</div>
@section scripts {
    <script>
        tinymce.init({
            selector: 'textarea',
            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Feb 23, 2025:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown', 'importword', 'exportword', 'exportpdf'
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        });
    </script>
    <partial name="_ValidationScriptsPartial"></partial>
}